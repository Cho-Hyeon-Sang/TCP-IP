TCP/IP Function

SERVER :
	socket() -> bind() -> listen() -> accept() -> read()/write() -> close()

CLIENT :
	socket() -> connect() -> read()/write() -> close()
	
	
		server		client

	socket()		socket()	
		|				|
	bind()				|
		|				|
	listen()			|
		|				|
	accept() <----- connect()
		|				|
	read()   <----- write()
	write()  -----> read()
		|				|
	close()			close()

// 소켓 생성
int socket(int domain, int type, int protocol)
[
	domain : 
		어떠한 영역에서 통신할 것인지 지정하기 위해서 사용
		AF_UNIX : 시스템내부 영역에서 프로세스와 프로세스 간의 통신을 위해 사용
		AF_INET : 인터넷 영역에서 물리적으로 서로 멀리 떨어진 컴퓨터 사이의 통신을 위해 사용
		AF_IPX  : Novell internet protocol 지금은 거의 사용 안함
		AF_INET : IPv6를 사용 AF_INET과 같다
		AF_X25  : X.25 아마추어 라디어용 protocol
	
	type : 
		데이터 통신에 사용할 프로토콜 유형을 지정하기 위해서 사용
		SOCK_STREAM : 연결지향 TCP/IP 기반 통신
		SOCK_DGRAM  : 데이터그램 방식 UDP/IP 기반 통신
		SOCK_RAW    : ...

	protocol : 
		호스트 간 통신에서 사용할 프로토콜을 결정
		IPPROTO_TCP : SOCK_STREAM과 함께 사용
		IPPROTO_UDP : SOCK_DGRAM과 함꼐 사용

	return value 0 : success
				-1 : fail
]
// 소켓 특성 정의
int bind(int sockfd, struct sockaddr *my_addr, socklen_t addrlen)
[
	sockfd : 
		앞에서 socket 함수로 생성된 endpoint(듣기) 소켓

	my_addr : 
		IP 주소와 port 번호를 저장하기 위한 변수가 있는 구조체

	addrlen :
		두번째 인자의 데이터 크기

	return value 0 : success
				-1 : fail
]
// 수신 대기열 생성
int listen(int sockfd, int backlog)
[
	sockfd : 
		socket 함수를 수행한 결과 얻은 듣기 소켓의 소켓 지정 번호
	
	backlog : 
		수신 대기열의 크기 일반적으로 5 지정

	return value 0 : success
				-1 : fail
]
// 연결 수락
int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen) : server
[

	sockfd : 
		socket 함수를 이용해서 생성된 소켓으로 ㅡㄹ라이언트의 연결 요청을 받아들이는 듣기 소켓

	addr : 
		accept 함수가 성공하게 되면 연결된 클라이언트의 주소와 포트 정보를 이 구조체에 복사해서 넘겨준다
		addr은 연결한 클라이언트의 정보를 확인하거나 로그를 남기기 위한 목적 등으로 사용할 수 있다.

	addrlen : 
		sockaddr 구조체의 크기이다.

	return value > 0 : success 이때 반환 값은 소켓 지정번호이다
				  -1 : fail
	
]
// 연결시도
connect() : client
// 데이터 통신
read() / write()
// 연결 종료
close()

